how vim
> vim doesn't exist, would you like to create it?
> yes
> 

a dictionary of all terms and where they print to
new pages written by the script could be added to the recently added folder
add the last command to latest
!! gh -!n
show the tree contents
open the file in the browser
show directory contents (for ex frameworks)
call pages with tags
 - call search with how find || search || grep...

 * home.md
 * index.md
latest.md
markdown.md
 - apps
autoreload.md
bower.md
grunt.md
vagrant.md
yeoman.md
 - frameworks
express.md
jquery.md
node.md
 - languages
javascript.md
js-codecademy.md
js-hoisting.md
js-lca-scope-context.md
js-peekeet-problem.md
js-ydkjs.md
 - tools
docker-learning-docker.md
docker.md
git.md
vim.md
 - unix
bash.md
basics.md
debug.md
intro.md
network.md
osx.md
search.md

## libraries

logging - for logging
compago - for git like multi-commands
argparse - for options
isatty - talking to a user?
colorama - add colours
progressbar2 - duh
setuptools - can handle dependencies
frameworks - cliff, clint

mytool-project/
  setup.py
  mytool
  mytoollib/
    __init__.py
    __main__.py
    mytool.py
    utils.py

# setup.py
setup(name = 'mytool',
    version = '2.0',
    url = 'http://mytool.ninjarockstar.guru/',
    license = 'BSD License',
    author - 'Mark Smith',
    author_email = 'judy@judy.co.uk',
    description = 'A tool with little purpose.',
    keywords = 'utils',
    packages = 'mytoollib',
    scripts = ['mytool']
    platforms = 'any')

## functions
 - add new tag (to old page)
 - create page (add tags, chose home(dir), append index/contents...)
 - read (in browser)
 - edit (in vim)
 - list pages
 - append command
